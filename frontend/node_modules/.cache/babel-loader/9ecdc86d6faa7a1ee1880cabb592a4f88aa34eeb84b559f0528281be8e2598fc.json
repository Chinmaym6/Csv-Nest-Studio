{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91767\\\\Desktop\\\\csv-file-manager\\\\frontend\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// frontend/src/contexts/AuthContext.jsx\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true); // ← new\n  const navigate = useNavigate();\n\n  // On mount, verify existing session\n  useEffect(() => {\n    api.get('/protected').then(res => {\n      const id = res.data.message.match(/user (\\d+)/)[1];\n      setUser({\n        id\n      });\n    }).catch(() => {\n      setUser(null);\n    }).finally(() => {\n      setLoading(false); // ← done checking\n    });\n  }, []);\n  const signup = async (name, email, password) => {\n    await api.post('/signup', {\n      name,\n      email,\n      password\n    });\n    navigate('/login');\n  };\n  const login = async (email, password) => {\n    await api.post('/login', {\n      email,\n      password\n    });\n    // re-fetch user ID\n    const res = await api.get('/protected');\n    const id = res.data.message.match(/user (\\d+)/)[1];\n    setUser({\n      id\n    });\n    navigate('/dashboard');\n  };\n  const logout = async () => {\n    await api.post('/logout');\n    setUser(null);\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      signup,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"lk6viekuCMMpYORkLYLEq0Wsfds=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","navigate","get","then","res","id","data","message","match","catch","finally","signup","name","email","password","post","login","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/91767/Desktop/csv-file-manager/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["// frontend/src/contexts/AuthContext.jsx\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../api';\r\n\r\nconst AuthContext = createContext();\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser]     = useState(null);\r\n  const [loading, setLoading] = useState(true);    // ← new\r\n  const navigate            = useNavigate();\r\n\r\n  // On mount, verify existing session\r\n  useEffect(() => {\r\n    api.get('/protected')\r\n      .then(res => {\r\n        const id = res.data.message.match(/user (\\d+)/)[1];\r\n        setUser({ id });\r\n      })\r\n      .catch(() => {\r\n        setUser(null);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);  // ← done checking\r\n      });\r\n  }, []);\r\n\r\n  const signup = async (name, email, password) => {\r\n    await api.post('/signup', { name, email, password });\r\n    navigate('/login');\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    await api.post('/login', { email, password });\r\n    // re-fetch user ID\r\n    const res = await api.get('/protected');\r\n    const id  = res.data.message.match(/user (\\d+)/)[1];\r\n    setUser({ id });\r\n    navigate('/dashboard');\r\n  };\r\n\r\n  const logout = async () => {\r\n    await api.post('/logout');\r\n    setUser(null);\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, signup, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AACnC,OAAO,MAAMS,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMT,UAAU,CAACO,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAOb,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAI;EACjD,MAAMgB,QAAQ,GAAcd,WAAW,CAAC,CAAC;;EAEzC;EACAD,SAAS,CAAC,MAAM;IACdE,GAAG,CAACc,GAAG,CAAC,YAAY,CAAC,CAClBC,IAAI,CAACC,GAAG,IAAI;MACX,MAAMC,EAAE,GAAGD,GAAG,CAACE,IAAI,CAACC,OAAO,CAACC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;MAClDV,OAAO,CAAC;QAAEO;MAAG,CAAC,CAAC;IACjB,CAAC,CAAC,CACDI,KAAK,CAAC,MAAM;MACXX,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,CAAC,CACDY,OAAO,CAAC,MAAM;MACbV,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,MAAM,GAAG,MAAAA,CAAOC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;IAC9C,MAAM1B,GAAG,CAAC2B,IAAI,CAAC,SAAS,EAAE;MAAEH,IAAI;MAAEC,KAAK;MAAEC;IAAS,CAAC,CAAC;IACpDb,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMe,KAAK,GAAG,MAAAA,CAAOH,KAAK,EAAEC,QAAQ,KAAK;IACvC,MAAM1B,GAAG,CAAC2B,IAAI,CAAC,QAAQ,EAAE;MAAEF,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC7C;IACA,MAAMV,GAAG,GAAG,MAAMhB,GAAG,CAACc,GAAG,CAAC,YAAY,CAAC;IACvC,MAAMG,EAAE,GAAID,GAAG,CAACE,IAAI,CAACC,OAAO,CAACC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IACnDV,OAAO,CAAC;MAAEO;IAAG,CAAC,CAAC;IACfJ,QAAQ,CAAC,YAAY,CAAC;EACxB,CAAC;EAED,MAAMgB,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,MAAM7B,GAAG,CAAC2B,IAAI,CAAC,SAAS,CAAC;IACzBjB,OAAO,CAAC,IAAI,CAAC;IACbG,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEX,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAEtB,IAAI;MAAEE,OAAO;MAAEY,MAAM;MAAEK,KAAK;MAAEC;IAAO,CAAE;IAAAtB,QAAA,EACnEA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAAC3B,GAAA,CA7CeF,YAAY;EAAA,QAGEP,WAAW;AAAA;AAAAqC,EAAA,GAHzB9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
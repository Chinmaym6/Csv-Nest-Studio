{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91767\\\\Desktop\\\\csv-file-manager\\\\frontend\\\\src\\\\components\\\\CSVViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useToast } from '../contexts/ToastContext';\nimport api from '../api';\nimport './CSVViewer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CSVViewer() {\n  _s();\n  const {\n    id\n  } = useParams(); // fileId\n  const nav = useNavigate();\n  const {\n    logout\n  } = useAuth();\n  const {\n    addToast\n  } = useToast();\n  const [rows, setRows] = useState([]); // array of {id, colA, colB, …}\n  const [headers, setHeaders] = useState([]); // column names\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    api.get(`/files/${id}/data`).then(res => {\n      // res.data = [{ id, row_data: {c1:v1, c2:v2,…} }, …]\n      const fetched = res.data.map(r => ({\n        id: r.id,\n        ...r.row_data\n      }));\n      setRows(fetched);\n      if (fetched.length) {\n        setHeaders(Object.keys(fetched[0]).filter(k => k !== 'id'));\n      }\n    }).catch(() => addToast('Failed to load data', 'error')).finally(() => setLoading(false));\n  }, [id, addToast]);\n\n  // handle cell edits\n  const onCellChange = (rowIdx, col) => e => {\n    const val = e.target.innerText;\n    setRows(rs => {\n      const copy = [...rs];\n      copy[rowIdx] = {\n        ...copy[rowIdx],\n        [col]: val\n      };\n      return copy;\n    });\n  };\n  const saveChanges = async () => {\n    try {\n      // build payload: [{id, row_data}, …]\n      const payload = rows.map(r => {\n        const {\n          id,\n          ...data\n        } = r;\n        return {\n          id,\n          row_data: data\n        };\n      });\n      await api.put(`/files/${id}/data`, {\n        rows: payload\n      });\n      addToast('Changes saved!', 'success');\n    } catch {\n      addToast('Save failed', 'error');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-data\",\n      children: \"Loading\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"csv-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"csv-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        onClick: () => nav('/dashboard'),\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-btn\",\n          onClick: saveChanges,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-btn\",\n          onClick: () => {\n            logout();\n            nav('/login');\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), rows.length ? /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"data-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headers.map(h => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: h\n          }, h, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rows.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headers.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n            contentEditable: true,\n            suppressContentEditableWarning: true,\n            onBlur: onCellChange(i, col),\n            children: row[col]\n          }, col, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }, this))\n        }, row.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-data\",\n      children: \"No data to display.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(CSVViewer, \"aFMAnrjxw3maBIyO1ymGaDP05DE=\", false, function () {\n  return [useParams, useNavigate, useAuth, useToast];\n});\n_c = CSVViewer;\nvar _c;\n$RefreshReg$(_c, \"CSVViewer\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","useAuth","useToast","api","jsxDEV","_jsxDEV","CSVViewer","_s","id","nav","logout","addToast","rows","setRows","headers","setHeaders","loading","setLoading","get","then","res","fetched","data","map","r","row_data","length","Object","keys","filter","k","catch","finally","onCellChange","rowIdx","col","e","val","target","innerText","rs","copy","saveChanges","payload","put","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","h","row","i","contentEditable","suppressContentEditableWarning","onBlur","_c","$RefreshReg$"],"sources":["C:/Users/91767/Desktop/csv-file-manager/frontend/src/components/CSVViewer.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useToast } from '../contexts/ToastContext';\r\nimport api from '../api';\r\nimport './CSVViewer.css';\r\n\r\nexport default function CSVViewer() {\r\n  const { id }    = useParams();         // fileId\r\n  const nav      = useNavigate();\r\n  const { logout } = useAuth();\r\n  const { addToast } = useToast();\r\n\r\n  const [rows, setRows]       = useState([]); // array of {id, colA, colB, …}\r\n  const [headers, setHeaders] = useState([]); // column names\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    api.get(`/files/${id}/data`)\r\n      .then(res => {\r\n        // res.data = [{ id, row_data: {c1:v1, c2:v2,…} }, …]\r\n        const fetched = res.data.map(r => ({ id: r.id, ...r.row_data }));\r\n        setRows(fetched);\r\n        if (fetched.length) {\r\n          setHeaders(Object.keys(fetched[0]).filter(k => k !== 'id'));\r\n        }\r\n      })\r\n      .catch(() => addToast('Failed to load data', 'error'))\r\n      .finally(() => setLoading(false));\r\n  }, [id, addToast]);\r\n\r\n  // handle cell edits\r\n  const onCellChange = (rowIdx, col) => e => {\r\n    const val = e.target.innerText;\r\n    setRows(rs => {\r\n      const copy = [...rs];\r\n      copy[rowIdx] = { ...copy[rowIdx], [col]: val };\r\n      return copy;\r\n    });\r\n  };\r\n\r\n  const saveChanges = async () => {\r\n    try {\r\n      // build payload: [{id, row_data}, …]\r\n      const payload = rows.map(r => {\r\n        const { id, ...data } = r;\r\n        return { id, row_data: data };\r\n      });\r\n      await api.put(`/files/${id}/data`, { rows: payload });\r\n      addToast('Changes saved!', 'success');\r\n    } catch {\r\n      addToast('Save failed', 'error');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <p className=\"no-data\">Loading…</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"csv-viewer\">\r\n      <div className=\"csv-header\">\r\n        <button className=\"back-btn\" onClick={() => nav('/dashboard')}>\r\n          ← Back\r\n        </button>\r\n        <div>\r\n          <button className=\"save-btn\" onClick={saveChanges}>\r\n            Save Changes\r\n          </button>\r\n          <button className=\"logout-btn\" onClick={() => { logout(); nav('/login'); }}>\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {rows.length ? (\r\n        <table className=\"data-table\">\r\n          <thead>\r\n            <tr>\r\n              {headers.map(h => (\r\n                <th key={h}>{h}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rows.map((row, i) => (\r\n              <tr key={row.id}>\r\n                {headers.map(col => (\r\n                  <td\r\n                    key={col}\r\n                    contentEditable\r\n                    suppressContentEditableWarning\r\n                    onBlur={onCellChange(i, col)}\r\n                  >\r\n                    {row[col]}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p className=\"no-data\">No data to display.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,OAAOC,GAAG,MAAM,QAAQ;AACxB,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM;IAAEC;EAAG,CAAC,GAAMR,SAAS,CAAC,CAAC,CAAC,CAAS;EACvC,MAAMS,GAAG,GAAQV,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEW;EAAO,CAAC,GAAGT,OAAO,CAAC,CAAC;EAC5B,MAAM;IAAEU;EAAS,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAE/B,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAASf,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACdM,GAAG,CAACe,GAAG,CAAC,UAAUV,EAAE,OAAO,CAAC,CACzBW,IAAI,CAACC,GAAG,IAAI;MACX;MACA,MAAMC,OAAO,GAAGD,GAAG,CAACE,IAAI,CAACC,GAAG,CAACC,CAAC,KAAK;QAAEhB,EAAE,EAAEgB,CAAC,CAAChB,EAAE;QAAE,GAAGgB,CAAC,CAACC;MAAS,CAAC,CAAC,CAAC;MAChEZ,OAAO,CAACQ,OAAO,CAAC;MAChB,IAAIA,OAAO,CAACK,MAAM,EAAE;QAClBX,UAAU,CAACY,MAAM,CAACC,IAAI,CAACP,OAAO,CAAC,CAAC,CAAC,CAAC,CAACQ,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAK,IAAI,CAAC,CAAC;MAC7D;IACF,CAAC,CAAC,CACDC,KAAK,CAAC,MAAMpB,QAAQ,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAC,CACrDqB,OAAO,CAAC,MAAMf,UAAU,CAAC,KAAK,CAAC,CAAC;EACrC,CAAC,EAAE,CAACT,EAAE,EAAEG,QAAQ,CAAC,CAAC;;EAElB;EACA,MAAMsB,YAAY,GAAGA,CAACC,MAAM,EAAEC,GAAG,KAAKC,CAAC,IAAI;IACzC,MAAMC,GAAG,GAAGD,CAAC,CAACE,MAAM,CAACC,SAAS;IAC9B1B,OAAO,CAAC2B,EAAE,IAAI;MACZ,MAAMC,IAAI,GAAG,CAAC,GAAGD,EAAE,CAAC;MACpBC,IAAI,CAACP,MAAM,CAAC,GAAG;QAAE,GAAGO,IAAI,CAACP,MAAM,CAAC;QAAE,CAACC,GAAG,GAAGE;MAAI,CAAC;MAC9C,OAAOI,IAAI;IACb,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF;MACA,MAAMC,OAAO,GAAG/B,IAAI,CAACW,GAAG,CAACC,CAAC,IAAI;QAC5B,MAAM;UAAEhB,EAAE;UAAE,GAAGc;QAAK,CAAC,GAAGE,CAAC;QACzB,OAAO;UAAEhB,EAAE;UAAEiB,QAAQ,EAAEH;QAAK,CAAC;MAC/B,CAAC,CAAC;MACF,MAAMnB,GAAG,CAACyC,GAAG,CAAC,UAAUpC,EAAE,OAAO,EAAE;QAAEI,IAAI,EAAE+B;MAAQ,CAAC,CAAC;MACrDhC,QAAQ,CAAC,gBAAgB,EAAE,SAAS,CAAC;IACvC,CAAC,CAAC,MAAM;MACNA,QAAQ,CAAC,aAAa,EAAE,OAAO,CAAC;IAClC;EACF,CAAC;EAED,IAAIK,OAAO,EAAE;IACX,oBAAOX,OAAA;MAAGwC,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC5C;EAEA,oBACE7C,OAAA;IAAKwC,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBzC,OAAA;MAAKwC,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBzC,OAAA;QAAQwC,SAAS,EAAC,UAAU;QAACM,OAAO,EAAEA,CAAA,KAAM1C,GAAG,CAAC,YAAY,CAAE;QAAAqC,QAAA,EAAC;MAE/D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT7C,OAAA;QAAAyC,QAAA,gBACEzC,OAAA;UAAQwC,SAAS,EAAC,UAAU;UAACM,OAAO,EAAET,WAAY;UAAAI,QAAA,EAAC;QAEnD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT7C,OAAA;UAAQwC,SAAS,EAAC,YAAY;UAACM,OAAO,EAAEA,CAAA,KAAM;YAAEzC,MAAM,CAAC,CAAC;YAAED,GAAG,CAAC,QAAQ,CAAC;UAAE,CAAE;UAAAqC,QAAA,EAAC;QAE5E;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAELtC,IAAI,CAACc,MAAM,gBACVrB,OAAA;MAAOwC,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC3BzC,OAAA;QAAAyC,QAAA,eACEzC,OAAA;UAAAyC,QAAA,EACGhC,OAAO,CAACS,GAAG,CAAC6B,CAAC,iBACZ/C,OAAA;YAAAyC,QAAA,EAAaM;UAAC,GAALA,CAAC;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CACpB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR7C,OAAA;QAAAyC,QAAA,EACGlC,IAAI,CAACW,GAAG,CAAC,CAAC8B,GAAG,EAAEC,CAAC,kBACfjD,OAAA;UAAAyC,QAAA,EACGhC,OAAO,CAACS,GAAG,CAACY,GAAG,iBACd9B,OAAA;YAEEkD,eAAe;YACfC,8BAA8B;YAC9BC,MAAM,EAAExB,YAAY,CAACqB,CAAC,EAAEnB,GAAG,CAAE;YAAAW,QAAA,EAE5BO,GAAG,CAAClB,GAAG;UAAC,GALJA,GAAG;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMN,CACL;QAAC,GAVKG,GAAG,CAAC7C,EAAE;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWX,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAER7C,OAAA;MAAGwC,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC9C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC3C,EAAA,CAnGuBD,SAAS;EAAA,QACbN,SAAS,EACVD,WAAW,EACTE,OAAO,EACLC,QAAQ;AAAA;AAAAwD,EAAA,GAJPpD,SAAS;AAAA,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
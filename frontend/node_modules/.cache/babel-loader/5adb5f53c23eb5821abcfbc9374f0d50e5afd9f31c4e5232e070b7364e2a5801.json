{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91767\\\\Desktop\\\\csv-file-manager\\\\frontend\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport api from '../api';\n\n// In Dashboard.jsx\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const [files, setFiles] = useState([]);\n  useEffect(() => {\n    loadFiles();\n  }, []);\n  async function loadFiles() {\n    const res = await api.get('/files');\n    setFiles(res.data);\n  }\n  async function handleDelete(id) {\n    if (!window.confirm('Are you sure you want to delete this file?')) return;\n    await api.delete(`/files/${id}`);\n    // Refresh list\n    setFiles(files.filter(f => f.id !== id));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/upload\",\n      children: \"Upload New CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: files.map(f => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/files/${f.id}`,\n          children: f.filename\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(f.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, f.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"Q2RYUcr07MgGv5yVCV31YurpQrA=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Link","api","jsxDEV","_jsxDEV","Dashboard","_s","files","setFiles","loadFiles","res","get","data","handleDelete","id","window","confirm","delete","filter","f","children","fileName","_jsxFileName","lineNumber","columnNumber","to","map","filename","onClick","_c","$RefreshReg$"],"sources":["C:/Users/91767/Desktop/csv-file-manager/frontend/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport api from '../api';\r\n\r\n// In Dashboard.jsx\r\nexport default function Dashboard() {\r\n  const [files, setFiles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadFiles();\r\n  }, []);\r\n\r\n  async function loadFiles() {\r\n    const res = await api.get('/files');\r\n    setFiles(res.data);\r\n  }\r\n\r\n  async function handleDelete(id) {\r\n    if (!window.confirm('Are you sure you want to delete this file?')) return;\r\n    await api.delete(`/files/${id}`);\r\n    // Refresh list\r\n    setFiles(files.filter(f => f.id !== id));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Your Files</h2>\r\n      <Link to=\"/upload\">Upload New CSV</Link>\r\n      <ul>\r\n        {files.map(f => (\r\n          <li key={f.id}>\r\n            <Link to={`/files/${f.id}`}>{f.filename}</Link>\r\n            {' '}\r\n            <button onClick={() => handleDelete(f.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,GAAG,MAAM,QAAQ;;AAExB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdU,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeA,SAASA,CAAA,EAAG;IACzB,MAAMC,GAAG,GAAG,MAAMR,GAAG,CAACS,GAAG,CAAC,QAAQ,CAAC;IACnCH,QAAQ,CAACE,GAAG,CAACE,IAAI,CAAC;EACpB;EAEA,eAAeC,YAAYA,CAACC,EAAE,EAAE;IAC9B,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,4CAA4C,CAAC,EAAE;IACnE,MAAMd,GAAG,CAACe,MAAM,CAAC,UAAUH,EAAE,EAAE,CAAC;IAChC;IACAN,QAAQ,CAACD,KAAK,CAACW,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACL,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC1C;EAEA,oBACEV,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBpB,OAAA,CAACH,IAAI;MAACwB,EAAE,EAAC,SAAS;MAAAL,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACxCpB,OAAA;MAAAgB,QAAA,EACGb,KAAK,CAACmB,GAAG,CAACP,CAAC,iBACVf,OAAA;QAAAgB,QAAA,gBACEhB,OAAA,CAACH,IAAI;UAACwB,EAAE,EAAE,UAAUN,CAAC,CAACL,EAAE,EAAG;UAAAM,QAAA,EAAED,CAAC,CAACQ;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EAC9C,GAAG,eACJpB,OAAA;UAAQwB,OAAO,EAAEA,CAAA,KAAMf,YAAY,CAACM,CAAC,CAACL,EAAE,CAAE;UAAAM,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAHnDL,CAAC,CAACL,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIT,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAClB,EAAA,CAlCuBD,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{createContext,useContext,useState}from'react';import'./ToastContext.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ToastContext=/*#__PURE__*/createContext();export const useToast=()=>useContext(ToastContext);//This is the JSX passed inside <ToastProvider>...</ToastProvider>.\nexport function ToastProvider(_ref){let{children}=_ref;const[toasts,setToasts]=useState([]);const addToast=function(message){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'info';let duration=arguments.length>2&&arguments[2]!==undefined?arguments[2]:3000;const id=Date.now();setToasts(prev=>[...prev,{id,message,type}]);setTimeout(()=>{setToasts(prev=>prev.filter(t=>t.id!==id));},duration);};return/*#__PURE__*/_jsxs(ToastContext.Provider,{value:{addToast},children:[children,/*#__PURE__*/_jsx(\"div\",{className:\"toast-container\",children:toasts.map(t=>/*#__PURE__*/_jsx(\"div\",{className:`toast toast-${t.type}`,children:t.message},t.id))})]});}","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","jsxs","_jsxs","ToastContext","useToast","ToastProvider","_ref","children","toasts","setToasts","addToast","message","type","arguments","length","undefined","duration","id","Date","now","prev","setTimeout","filter","t","Provider","value","className","map"],"sources":["C:/Users/91767/Desktop/csv-file-manager/frontend/src/contexts/ToastContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport './ToastContext.css';\r\n\r\nconst ToastContext = createContext();\r\nexport const useToast = () => useContext(ToastContext);\r\n                                    //This is the JSX passed inside <ToastProvider>...</ToastProvider>.\r\nexport function ToastProvider({ children }) {\r\n  const [toasts, setToasts] = useState([]);\r\n\r\n  const addToast = (message, type = 'info', duration = 3000) => {\r\n    const id = Date.now();\r\n    setToasts(prev => [...prev, { id, message, type }]);\r\n    setTimeout(() => {\r\n      setToasts(prev => prev.filter(t => t.id !== id));\r\n    }, duration);\r\n  };\r\n\r\n  return (\r\n    <ToastContext.Provider value={{ addToast }}>\r\n      {children}\r\n      <div className=\"toast-container\">\r\n        {toasts.map(t => (\r\n          <div key={t.id} className={`toast toast-${t.type}`}>{t.message}</div>\r\n        ))}\r\n      </div>\r\n    </ToastContext.Provider>\r\n  );\r\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAClE,MAAO,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5B,KAAM,CAAAC,YAAY,cAAGP,aAAa,CAAC,CAAC,CACpC,MAAO,MAAM,CAAAQ,QAAQ,CAAGA,CAAA,GAAMP,UAAU,CAACM,YAAY,CAAC,CAClB;AACpC,MAAO,SAAS,CAAAE,aAAaA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxC,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAExC,KAAM,CAAAY,QAAQ,CAAG,QAAAA,CAACC,OAAO,CAAqC,IAAnC,CAAAC,IAAI,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,MAAM,IAAE,CAAAG,QAAQ,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CACvD,KAAM,CAAAI,EAAE,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CACrBV,SAAS,CAACW,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAE,CAAEH,EAAE,CAAEN,OAAO,CAAEC,IAAK,CAAC,CAAC,CAAC,CACnDS,UAAU,CAAC,IAAM,CACfZ,SAAS,CAACW,IAAI,EAAIA,IAAI,CAACE,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACN,EAAE,GAAKA,EAAE,CAAC,CAAC,CAClD,CAAC,CAAED,QAAQ,CAAC,CACd,CAAC,CAED,mBACEd,KAAA,CAACC,YAAY,CAACqB,QAAQ,EAACC,KAAK,CAAE,CAAEf,QAAS,CAAE,CAAAH,QAAA,EACxCA,QAAQ,cACTP,IAAA,QAAK0B,SAAS,CAAC,iBAAiB,CAAAnB,QAAA,CAC7BC,MAAM,CAACmB,GAAG,CAACJ,CAAC,eACXvB,IAAA,QAAgB0B,SAAS,CAAE,eAAeH,CAAC,CAACX,IAAI,EAAG,CAAAL,QAAA,CAAEgB,CAAC,CAACZ,OAAO,EAApDY,CAAC,CAACN,EAAwD,CACrE,CAAC,CACC,CAAC,EACe,CAAC,CAE5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
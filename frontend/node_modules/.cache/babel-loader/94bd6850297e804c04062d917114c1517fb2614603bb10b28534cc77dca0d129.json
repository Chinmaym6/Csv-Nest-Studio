{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91767\\\\Desktop\\\\csv-file-manager\\\\frontend\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// frontend/src/contexts/AuthContext.jsx\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n//This component wraps your app and provides authentication functionality to all children components via React Context.\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // On mount: if we have a token, verify it and fetch user ID\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setLoading(false);\n      return;\n    }\n    api.get('/protected').then(res => {\n      // extract userId from your protected endpoint’s message\n      const id = Number(res.data.message.match(/user (\\d+)/)[1]);\n      setUser({\n        id\n      });\n    }).catch(() => {\n      // invalid or expired token\n      localStorage.removeItem('token');\n      setUser(null);\n    }).finally(() => setLoading(false));\n  }, []);\n\n  // Sign up: receive token, store it, set user\n  const signup = async (name, email, password) => {\n    const res = await api.post('/signup', {\n      name,\n      email,\n      password\n    });\n    const {\n      token\n    } = res.data;\n    localStorage.setItem('token', token);\n\n    // immediately verify and set user\n    const p = await api.get('/protected');\n    const id = Number(p.data.message.match(/user (\\d+)/)[1]);\n    setUser({\n      id\n    });\n    navigate('/dashboard');\n  };\n\n  // Log in: receive token, store it, set user\n  const login = async (email, password) => {\n    const res = await api.post('/login', {\n      email,\n      password\n    });\n    const {\n      token\n    } = res.data;\n    localStorage.setItem('token', token);\n\n    // fetch user ID\n    const p = await api.get('/protected');\n    const id = Number(p.data.message.match(/user (\\d+)/)[1]);\n    setUser({\n      id\n    });\n    navigate('/dashboard');\n  };\n\n  // Log out: client-side only\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      signup,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n// frontend/src/contexts/AuthContext.jsx\n// import React, { createContext, useContext, useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import api from '../api';\n// import '../components/Auth.css';\n\n// const AuthContext = createContext();\n// export const useAuth = () => useContext(AuthContext);\n\n// export function AuthProvider({ children }) {\n//   const [user, setUser]     = useState(null);\n//   const [loading, setLoading] = useState(true);    // ← new\n//   const navigate            = useNavigate();\n\n// On mount, verify existing session\n// useEffect(() => {\n//   api.get('/protected')\n//     .then(res => {\n//       const id = res.data.message.match(/user (\\d+)/)[1];\n//       setUser({ id });\n//     })\n//     .catch(() => {\n//       setUser(null);\n//     })\n//     .finally(() => {\n//       setLoading(false);  // ← done checking\n//     });\n// }, []);\n\n// const signup = async (name, email, password) => {\n//   await api.post('/signup', { name, email, password });\n//   navigate('/login');\n// };\n\n// const login = async (email, password) => {\n//   await api.post('/login', { email, password });\n// re-fetch user ID\n//     const res = await api.get('/protected');\n//     const id  = res.data.message.match(/user (\\d+)/)[1];\n//     setUser({ id });\n//     navigate('/dashboard');\n//   };\n\n//   const logout = async () => {\n//     await api.post('/logout');\n//     setUser(null);\n//     navigate('/login');\n//   };\n\n//   return (\n//     <AuthContext.Provider value={{ user, loading, signup, login, logout }}>\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// }\n_s2(AuthProvider, \"lk6viekuCMMpYORkLYLEq0Wsfds=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","navigate","token","localStorage","getItem","get","then","res","id","Number","data","message","match","catch","removeItem","finally","signup","name","email","password","post","setItem","p","login","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/91767/Desktop/csv-file-manager/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["\r\n// frontend/src/contexts/AuthContext.jsx\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../api';\r\n\r\nconst AuthContext = createContext();\r\nexport const useAuth = () => useContext(AuthContext);\r\n                                //This component wraps your app and provides authentication functionality to all children components via React Context.\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser]       = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate              = useNavigate();\r\n\r\n  // On mount: if we have a token, verify it and fetch user ID\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    api.get('/protected')\r\n      .then(res => {\r\n        // extract userId from your protected endpoint’s message\r\n        const id = Number(res.data.message.match(/user (\\d+)/)[1]);\r\n        setUser({ id });\r\n      })\r\n      .catch(() => {\r\n        // invalid or expired token\r\n        localStorage.removeItem('token');\r\n        setUser(null);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  // Sign up: receive token, store it, set user\r\n  const signup = async (name, email, password) => {\r\n    const res = await api.post('/signup', { name, email, password });\r\n    const { token } = res.data;\r\n    localStorage.setItem('token', token);\r\n\r\n    // immediately verify and set user\r\n    const p = await api.get('/protected');\r\n    const id = Number(p.data.message.match(/user (\\d+)/)[1]);\r\n    setUser({ id });\r\n\r\n    navigate('/dashboard');\r\n  };\r\n\r\n  // Log in: receive token, store it, set user\r\n  const login = async (email, password) => {\r\n    const res = await api.post('/login', { email, password });\r\n    const { token } = res.data;\r\n    localStorage.setItem('token', token);\r\n\r\n    // fetch user ID\r\n    const p = await api.get('/protected');\r\n    const id = Number(p.data.message.match(/user (\\d+)/)[1]);\r\n    setUser({ id });\r\n\r\n    navigate('/dashboard');\r\n  };\r\n\r\n  // Log out: client-side only\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, signup, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// frontend/src/contexts/AuthContext.jsx\r\n// import React, { createContext, useContext, useState, useEffect } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import api from '../api';\r\n// import '../components/Auth.css';\r\n\r\n// const AuthContext = createContext();\r\n// export const useAuth = () => useContext(AuthContext);\r\n\r\n// export function AuthProvider({ children }) {\r\n//   const [user, setUser]     = useState(null);\r\n//   const [loading, setLoading] = useState(true);    // ← new\r\n//   const navigate            = useNavigate();\r\n\r\n  // On mount, verify existing session\r\n  // useEffect(() => {\r\n  //   api.get('/protected')\r\n  //     .then(res => {\r\n  //       const id = res.data.message.match(/user (\\d+)/)[1];\r\n  //       setUser({ id });\r\n  //     })\r\n  //     .catch(() => {\r\n  //       setUser(null);\r\n  //     })\r\n  //     .finally(() => {\r\n  //       setLoading(false);  // ← done checking\r\n  //     });\r\n  // }, []);\r\n\r\n  // const signup = async (name, email, password) => {\r\n  //   await api.post('/signup', { name, email, password });\r\n  //   navigate('/login');\r\n  // };\r\n\r\n  // const login = async (email, password) => {\r\n  //   await api.post('/login', { email, password });\r\n    // re-fetch user ID\r\n//     const res = await api.get('/protected');\r\n//     const id  = res.data.message.match(/user (\\d+)/)[1];\r\n//     setUser({ id });\r\n//     navigate('/dashboard');\r\n//   };\r\n\r\n//   const logout = async () => {\r\n//     await api.post('/logout');\r\n//     setUser(null);\r\n//     navigate('/login');\r\n//   };\r\n\r\n//   return (\r\n//     <AuthContext.Provider value={{ user, loading, signup, login, logout }}>\r\n//       {children}\r\n//     </AuthContext.Provider>\r\n//   );\r\n// }\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}